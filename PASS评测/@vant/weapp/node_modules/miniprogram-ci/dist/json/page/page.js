"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getPageJSON=void 0;const path=require("path"),lodash_1=require("lodash"),cache_1=require("../../utils/cache"),ext_1=require("../app/ext"),app_merge_ext_1=require("../app/app_merge_ext"),tools_1=require("../../utils/tools"),_page_1=require("./_page"),common_1=require("../common"),common_2=require("../../utils/common"),locales=require("../../utils/locales/locales"),spreadUsingComponent=async e=>{const{project:t,pagePath:o,inputJSON:n}=e;if(o.includes("miniprogram_npm"))return;const a=await app_merge_ext_1.getAppJSON(t,!0);if(common_1.checkPagePathIsInIndependentSubpackage(a,o))return;const s=Object.assign({},a.usingComponents);if(0!==Object.keys(s).length){n.usingComponents||(n.usingComponents={});for(const e in s){if(n.usingComponents[e])continue;const t=s[e]||"";if(t.startsWith("/")||t.startsWith("plugin://")){n.usingComponents[e]=t;continue}const a=tools_1.normalizePath(path.posix.relative(path.posix.dirname(o),t));n.usingComponents[e]=a.startsWith(".")?a:"./"+a}}},mergeExtJSON=async e=>{const{project:t,inputJSON:o,pagePath:n}=e,a=await ext_1.getExtJSON(t,!0);a&&a.extPages&&a.extPages[n]&&Object.assign(o,a.extPages[n])},checkComponentPath=async e=>{const{project:t,miniprogramRoot:o,pagePath:n,inputJSON:a}=e;await common_1.checkComponentPath({project:t,root:o,relativePath:n+".json",inputJSON:a})},checkComponentGenerics=e=>{const{pagePath:t,inputJSON:o}=e,n=t+".json";if(!o.componentGenerics)return;const a=[];for(const e in o.componentGenerics){const t=o.componentGenerics[e],n=tools_1.getType(t);"boolean"===n||"object"===n?"object"===n&&"string"!==tools_1.getType(t.default)&&a.push(locales.config.JSON_CONTENT_SHOULD_BE.format([`["componentGenerics"]["${e}"]["default"]`,"string"])):a.push(locales.config.JSON_CONTENT_SHOULD_BE.format([`["componentGenerics"]["${e}"]`,"boolean/object"]))}a.length>0&&common_2.throwError({msg:a.join("\n"),filePath:n})},compilePageJSON=async e=>{await mergeExtJSON(e),checkComponentGenerics(e),await checkComponentPath(e),await spreadUsingComponent(e)};async function getPageJSON(e,t){const{pagePath:o,miniprogramRoot:n="",useCache:a=!0}=t,s=tools_1.normalizePath(path.posix.join(n,o+".json")),c=`${cache_1.CACHE_KEY.COMPILED_PAGE_JSON}_${s}`,i=cache_1.cacheManager.get(e,c);if(i&&a)return lodash_1.cloneDeep(i);const r=await _page_1.checkPageJSON(e,t);return await compilePageJSON({project:e,miniprogramRoot:n,inputJSON:r,filePath:s,pagePath:o}),r.usingComponents||(r.usingComponents={}),cache_1.cacheManager.set(e,c,r),lodash_1.cloneDeep(r)}exports.getPageJSON=getPageJSON;