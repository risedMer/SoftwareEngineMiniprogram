"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.tryTranslateSingleFile=void 0;const babelCodeFrame=require("babel-code-frame"),OSPath=require("path"),babylon=require("babylon"),babel_traverse_1=require("babel-traverse"),sourcemap=require("source-map");class TranslateResult{constructor(){this.translated=!0,this.errMsg="",this.debugs=[],this.translatedContent="",this.fullPath="",this.translatedSourceMap=""}}function getErrorCodeFrame(e,n,t,r){let o;try{o=new sourcemap.SourceMapConsumer(n||""),e=o.sourceContentFor(t)||e}catch(e){}const i=[];for(const n of r){let t={line:n.line,column:n.column>0?n.column:0};try{o&&(t=o.originalPositionFor({line:n.line,column:n.column}))}catch(e){}const r=babelCodeFrame(e,t.line,t.column);i.push(`${n.reason}\n${r}`)}return i.join("\n\n")}function translateCode(e,n){const t=e.replace(/\r\n/g,"\n").split("\n");for(let e=0;e<t.length;e++){const r=t[e],o=n[e+1];if(o){const n=[];let i=0;for(const e in o){const t=o[e];n.push(r.substr(i,t.column-i+1)),n.push(t.toString),i=t.column+t.fromString.length+1}n.push(r.substr(i)),t[e]=n.join("")}}return t.join("\n")}function translateSourceMap(e,n,t){const r=new sourcemap.SourceMapConsumer(e),o=new sourcemap.SourceMapGenerator({file:n});let i;return r.eachMapping(e=>{if("number"!=typeof e.originalLine||"number"!=typeof e.originalColumn)return;const n={generated:{line:e.generatedLine,column:e.generatedColumn},source:e.source,name:e.name,original:{line:e.originalLine,column:e.originalColumn}};if(i&&i.line===e.generatedLine?n.generated.column+=i.offset:i=void 0,t[e.generatedLine]){const n=t[e.generatedLine][e.generatedColumn];n&&(i&&i.line===n.line?i.offset+=n.offset:i={line:n.line,offset:n.offset})}o.addMapping(n)}),o.toString()}exports.tryTranslateSingleFile=e=>{const n=new TranslateResult,{filePath:t,nameMapping:r,code:o,rootPath:i}=e;let a=OSPath.posix.dirname(OSPath.posix.relative(i,t));"."===a&&(a="");const l=[];let s;try{s=babylon.parse(o)}catch(r){return l.push({line:r.loc&&r.loc.line||1,column:r.loc&&r.loc.column||1,reason:r.message}),n.translated=!1,n.errMsg=`in ${OSPath.posix.join(i,t)}\n${getErrorCodeFrame(o,e.sourceMap,e.sourceFileName,l)}`,n}const u={};if(babel_traverse_1.default(s,{AssignmentExpression(e){const n=e.node.loc.start;"Identifier"===e.node.left.type&&"require"===e.node.left.name&&l.push({line:n.line,column:n.column,reason:"assigning other name with 'require'"}),"Identifier"===e.node.right.type&&"require"===e.node.right.name&&l.push({line:n.line,column:n.column,reason:"'require' should not be renamed"})},VariableDeclarator(e){const n=e.node.loc.start;e.node.id&&"Identifier"===e.node.id.type&&"require"===e.node.id.name&&l.push({line:n.line,column:n.column,reason:"(init) assigning other name with 'require'"}),e.node.init&&"Identifier"===e.node.init.type&&"require"===e.node.init.name&&l.push({line:n.line,column:n.column,reason:"(init) 'require' should not be renamed"})},CallExpression(e){const o=e.node.loc.start;for(const n of e.node.arguments)"Identifier"===n.type&&"require"===n.name&&l.push({line:o.line,column:o.column,reason:"passing 'require' as a parameter is not a good taste"});if("Identifier"===e.node.callee.type&&"require"===e.node.callee.name&&(1===e.node.arguments.length&&"StringLiteral"===e.node.arguments[0].type||l.push({line:o.line,column:o.column,reason:"'require' requires one and only one static string literal"})),"require"===e.node.callee.name&&1===e.node.arguments.length&&"StringLiteral"===e.node.arguments[0].type){const o=e.node.arguments[0].loc.start,i=e.node.arguments[0].value;let l=OSPath.posix.normalize(OSPath.posix.join(a,i));/\.js$/.test(l)||(l+=".js"),/^\//.test(l)&&(l=l.replace(/^\//,""));let s=r[l];s?(s=r[t]?OSPath.posix.relative(OSPath.posix.dirname(r[t]),s):OSPath.posix.relative(a,s),u[o.line]||(u[o.line]={}),u[o.line][o.column]={line:o.line,column:o.column,fromString:i,toString:s,offset:s.length-i.length},n.debugs.push([t,i,"replace",[l,s]])):(r[t]&&(s=OSPath.posix.relative(OSPath.posix.dirname(r[t]),l),u[o.line]||(u[o.line]={}),u[o.line][o.column]={line:o.line,column:o.column,fromString:i,toString:s,offset:s.length-i.length},n.debugs.push([t,i,"replace",[l,s]])),n.debugs.push([t,i,"ignored"]))}},Identifier(e){const n=e.node.loc.start;if("require"===e.node.name){if("UnaryExpression"===e.parent.type&&"typeof"===e.parent.operator)return;"CallExpression"!==e.parent.type&&l.push({line:n.line,column:n.column,reason:`require is not being used properly in '${e.parent.type}'`})}}}),l.length>0)return n.translated=!1,n.errMsg=`in ${t}\n${getErrorCodeFrame(o,e.sourceMap,e.sourceFileName,l)}`,n;if(Object.keys(u).length>0){n.translatedContent=translateCode(o,u);try{n.translatedSourceMap=translateSourceMap(e.sourceMap||"",e.sourceFileName,u)}catch(e){}}else n.translatedContent=o,n.translatedSourceMap=e.sourceMap;return n};