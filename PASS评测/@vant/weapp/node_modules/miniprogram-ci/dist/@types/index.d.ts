/// <reference path="@types/index.d.ts" />
import { Project } from './utils/project';
import { compile } from './compile/index';
import { getAppJSON } from './json/app/app_merge_ext';
import { getPageJSON } from './json/page/page';
import { compileJS } from './compile/handler/js';
import getGameJSON = require('./json/game');
import { getDevPluginJSON as getPluginJSON } from './json/plugin/plugin';
import { getPluginPageJSON } from './json/plugin/plugin_page';
import { IFSAgent } from './utils/fsagent';
import { upload } from './upload/upload';
import { preview } from './upload/preview';
import { packNpm, packNpmManually } from './utils/npm/packnpm';
import { getSiteMapJSON } from './json/sitemap';
import { checkThemeJSON, mergeThemeJSONToAppJSON, mergeThemeJSONToPageJSON } from './json/theme';
import { setCiProxy as proxy } from './utils/request';
import { schemaValidate } from './validate/schemaValidate';
import { getDevSourceMap } from './utils/sourcemap/getDevSourceMap';
import { uploadFunction } from './cloud/uploadFunction';
export declare function setFSAgent(agent: IFSAgent): void;
export { Project };
export { getAppJSON };
export { getPageJSON };
export { compileJS };
export { compile };
export { getGameJSON };
export { getPluginJSON };
export { getPluginPageJSON };
export { checkThemeJSON };
export { getSiteMapJSON };
export declare const setLocale: (tag: string) => void;
export { upload };
export { preview };
export { packNpm };
export { packNpmManually };
export { proxy };
export { schemaValidate };
export { mergeThemeJSONToAppJSON };
export { mergeThemeJSONToPageJSON };
export { getDevSourceMap };
export declare const cloud: {
    uploadFunction: typeof uploadFunction;
};
export declare const cleanCache: () => void;
